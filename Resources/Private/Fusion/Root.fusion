prototype(Flowpack.Listable:PaginatedCollection) {
    renderer.@context.data.collection.lightweightElasticsearch {
        @position = "start"

        condition = ${Type.instance(props.collection, 'Sandstorm\LightweightElasticsearch\Query\SearchRequestBuilder')}
        renderer = ${props.collection}
        renderer.@process.limit = ${value.size(props.itemsPerPage)}
        renderer.@process.offset = ${value.from(offset)}
        renderer.@process.execute = ${value.execute()}
    }
}

prototype(Flowpack.Listable:ContentCaseShort) {
    lightweightElasticsearchDocument {
        @position = "start"
        condition = ${Type.instance(node, 'Sandstorm\LightweightElasticsearch\Query\Result\SearchResultDocument')}
        condition = true
        type = 'Sandstorm.LightweightElasticsearch:SearchResultCase'
        element.@context.searchResultDocument = ${node}
    }
}

prototype(Sandstorm.LightweightElasticsearch:SearchResultCase) < prototype(Neos.Fusion:Case) {
}
